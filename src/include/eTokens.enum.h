/* *******************
   Enum & Lookup Array
   
   ******************/

#ifndef _ETOKENS_ENUM_H
#define _ETOKENS_ENUM_H

enum  {
	TOK_NULL,
	TOK_CONST_NUM,
	TOK_DIVIDE,
	TOK_ASTERISK,
	TOK_PLUS,
	TOK_MINUS,
	TOK_INC,
	TOK_DEC,
	TOK_OR,
	TOK_XOR,
	TOK_NOT,
	TOK_AMP,
	TOK_LOGICOR,
	TOK_LOGICAND,
	TOK_LOGICNOT,
	TOK_CMPEQU,
	TOK_GT,
	TOK_GTE,
	TOK_LT,
	TOK_LTE,
	TOK_QMARK,
	TOK_SHL,
	TOK_SHR,
	TOK_ASSIGNEQU,
	TOK_DIV_EQU,
	TOK_MULT_EQU,
	TOK_PLUS_EQU,
	TOK_MINUS_EQU,
	TOK_OR_EQU,
	TOK_AND_EQU,
	TOK_XOR_EQU,
	TOK_SQUARE_OPEN,
	TOK_SQUARE_CLOSE,
	TOK_BRACE_OPEN,
	TOK_BRACE_CLOSE,
	TOK_PAREN_OPEN,
	TOK_PAREN_CLOSE,
	TOK_STR,
	TOK_CHAR,
	TOK_VARIABLE,
	TOK_IDENT,
	TOK_RSVDWORD,
	TOK_COLON,
	TOK_COMMA,
	TOK_SEMICOLON,
	TOK_SCOPE,
	TOK_SLASH,
	TOK_MEMBER,
	TOK_EOF,
	TOK_T_VALUE,
	TOK_T_STRING,
	TOK_LAST,
	NUM_ETOKENS
};

#ifdef _TOKEN_C
const char *csaTOKEN_NAMES[] = {
	"TOK_NULL",
	"TOK_CONST_NUM",
	"TOK_DIVIDE",
	"TOK_ASTERISK",
	"TOK_PLUS",
	"TOK_MINUS",
	"TOK_INC",
	"TOK_DEC",
	"TOK_OR",
	"TOK_XOR",
	"TOK_NOT",
	"TOK_AMP",
	"TOK_LOGICOR",
	"TOK_LOGICAND",
	"TOK_LOGICNOT",
	"TOK_CMPEQU",
	"TOK_GT",
	"TOK_GTE",
	"TOK_LT",
	"TOK_LTE",
	"TOK_QMARK",
	"TOK_SHL",
	"TOK_SHR",
	"TOK_ASSIGNEQU",
	"TOK_DIV_EQU",
	"TOK_MULT_EQU",
	"TOK_PLUS_EQU",
	"TOK_MINUS_EQU",
	"TOK_OR_EQU",
	"TOK_AND_EQU",
	"TOK_XOR_EQU",
	"TOK_SQUARE_OPEN",
	"TOK_SQUARE_CLOSE",
	"TOK_BRACE_OPEN",
	"TOK_BRACE_CLOSE",
	"TOK_PAREN_OPEN",
	"TOK_PAREN_CLOSE",
	"TOK_STR",
	"TOK_CHAR",
	"TOK_VARIABLE",
	"TOK_IDENT",
	"TOK_RSVDWORD",
	"TOK_COLON",
	"TOK_COMMA",
	"TOK_SEMICOLON",
	"TOK_SCOPE",
	"TOK_SLASH",
	"TOK_MEMBER",
	"TOK_EOF",
	"TOK_T_VALUE",
	"TOK_T_STRING",
	"TOK_LAST",
	""
};
#endif

#endif
